apiVersion: v1
kind: ConfigMap
metadata:
  name: openmpi-scripts
data:
  enqueue.sh: |-
    #!/bin/sh
    set -x
    pipe=/tmp/mpi/queue
    if [ ! -p ${pipe} ]; then
      mkfifo ${pipe}
    fi
    echo "$*" > ${pipe}
  kubexec.sh: |-
    #!/bin/sh
    set -x
    lines=$1
    pipe=/tmp/mpi/queue
    if [ ! -p ${pipe} ]; then
      mkfifo ${pipe}
    fi
    i=0
    while [ ${i} -lt ${lines} ]; do
      read line < ${pipe}
      if [ -n "${line}" ]; then
        i=$((i+1))
        set -- ${line}
        REMOTE_HOST=$1
        shift
        kubectl exec ${REMOTE_HOST} -- /bin/sh -c "$*"
      fi
    done
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openmpi-worker
spec:
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: openmpi-worker
  serviceName: openmpi-worker
  replicas: 4
  template:
    metadata:
      labels:
        app: openmpi-worker
    spec:
      containers:
      - name: openmpi
        image: rongou/openmpi
        command: ["sleep"]
        args: ["365d"]
        volumeMounts:
        - name: openmpi-scripts
          mountPath: /opt/mpi
        - name: openmpi-queue
          mountPath: /tmp/mpi
      volumes:
      - name: openmpi-scripts
        configMap:
          name: openmpi-scripts
          defaultMode: 0500
      - name: openmpi-queue
        emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: openmpi-test
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openmpi-test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: openmpi-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: openmpi-test
subjects:
- kind: ServiceAccount
  name: openmpi-test
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openmpi-hostfile
data:
  hostfile: |-
    openmpi-worker-0 slots=4 max_slots=4
    openmpi-worker-1 slots=4 max_slots=4
    openmpi-worker-2 slots=4 max_slots=4
    openmpi-worker-3 slots=4 max_slots=4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: openmpi-launcher
spec:
  template:
    spec:
      serviceAccountName: openmpi-test
      containers:
      - name: openmpi
        image: rongou/openmpi
        command: ["mpirun"]
        args: [
          "-allow-run-as-root",
          "-bind-to", "none",
          "-map-by", "slot",
          "-mca", "plm_rsh_agent", "/opt/mpi/enqueue.sh",
          "-hostfile", "/etc/mpi/hostfile",
          "hostname"
        ]
        volumeMounts:
        - name: openmpi-hostfile
          mountPath: /etc/mpi
        - name: openmpi-scripts
          mountPath: /opt/mpi
        - name: openmpi-queue
          mountPath: /tmp/mpi
      - name: kubectl
        image: rongou/kubectl
        command: ["/opt/mpi/kubexec.sh"]
#        command: ["sleep", "365d"]
        args: ["4"]
        volumeMounts:
        - name: openmpi-scripts
          mountPath: /opt/mpi
        - name: openmpi-queue
          mountPath: /tmp/mpi
      volumes:
      - name: openmpi-hostfile
        configMap:
          name: openmpi-hostfile
          defaultMode: 0400
      - name: openmpi-scripts
        configMap:
          name: openmpi-scripts
          defaultMode: 0500
      - name: openmpi-queue
        emptyDir: {}
      restartPolicy: Never
